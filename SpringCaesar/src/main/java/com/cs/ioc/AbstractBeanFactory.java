package com.cs.ioc;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;/** * @author: demopoo * @Date: Created in 下午1:40 2018/3/19 * @Des: * @Modifyed By: */public abstract class AbstractBeanFactory implements BeanFactory {    private Map<String,BeanDefinition> map = new ConcurrentHashMap<>();    private List<String> list = new ArrayList<>();    @Override    public Object getBean(String beanName) {        BeanDefinition beanDefinition = map.get(beanName);        if(beanDefinition == null){            throw new NullPointerException();        }        Object object = beanDefinition.getBean();        if (object == null){            object = createBean(beanDefinition);        }        return object;    }    public void registerBeanDefinition(String beanName, BeanDefinition beanDefinition) {        this.map.put(beanName,beanDefinition);        this.list.add(beanName);    }    public void preInstanceSingleton(){        Iterator it = this.list.iterator();        if (it.hasNext()){            String beanName = (String)it.next();            getBean(beanName);        }    }    public abstract Object createBean(BeanDefinition beanDefinition);}